plugins {
    id 'application'
    id 'idea'
    id 'jacoco'
    id 'org.sonarqube' version '3.1.1'
}

java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    jcenter()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.2'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
}

application {
    mainClass = 'hu.netcode.futurejavademo.CompletableFutureDemo'
}

tasks.withType(JacocoReport) {
    reports {
        xml.enabled(true)
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.6'
}

sonarqube {
    properties {
        property('sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml')
        property('sonar.java.binaries', 'build/classes')
        property('sonar.java.coveragePlugin', 'jacoco')
        property('sonar.jacoco.reportPath', 'build/jacoco/test.exec')
        property('sonar.junit.reportPath', 'build/test-results/test')
        property('sonar.language', 'java')
        property('sonar.sources', 'src/main/java')
    }
}
